import nltk
from nltk.corpus import stopwords
from string import punctuation
english_stopwords = stopwords.words('russian')
import pymorphy2
def remove_punct(text):
    table = {33: ' ', 34: ' ', 35: ' ', 36: ' ', 37: ' ', 38: ' ', 39: ' ', 40: ' ', 41: ' ', 42: ' ', 43: ' ', 44: ' ', 45: ' ',46: " ", 47: ' ', 58: ' ', 59: ' ', 60: ' ', 61: ' ', 62: ' ', 63: ' ', 64: ' ', 91: ' ', 92: ' ', 93: ' ', 94: ' ', 95: ' ', 96: ' ', 123: ' ', 124: ' ', 125: ' ', 126: ' '}
    return text.translate(table)
morph = pymorphy2.MorphAnalyzer()

def norm_word(w):
    try:
        return morph.parse(w)[0].inflect({'sing', 'nomn'}).word
    except:
        return w
    
def is_noun_or_adjective(x):
    try:
        p = morph.parse(x)[0]
        return p.tag.POS in ('NOUN', 'ADJF')
    except:
        return False


df['text'] = df['text'].map(lambda x: x.replace("\xa0", " "))
df['text'] = df['text'].map(lambda x: x.replace("Â©", " "))
df['text'] = df['text'].map(lambda x: x.lower())
df['text'] = df['text'].map(lambda x: remove_punct(x))
df['text'] = df['text'].map(lambda x: x.split(' '))
df['text'] = df['text'].map(lambda x: [token for token in x if token not in english_stopwords\
                                                                      and token != " " \
                                                                      and token.strip() not in punctuation])
df['text'] = df['text'].map(lambda x: [norm_word(word) for word in x])
df['text'] = df['text'].map(lambda x: [word for word in x if is_noun_or_adjective(word)])
df['text'] = df['text'].map(lambda x: ' '.join(x))
